import { ApiPropertyOptions } from '@nestjs/swagger';
export declare type PropertyOptions<T, CustomOptions = Record<string, never>> = BasePropertyOptions & CustomOptions & (SingularPropertyOptions<T> | ArrayPropertyOptions<T>);
export declare type BasePropertyOptions = {
    name?: string;
    optional?: true;
    description?: string;
    deprecated?: true;
    nullable?: true;
};
export declare type SingularPropertyOptions<T> = {
    example?: T;
    default?: T;
    isArray?: undefined;
};
export declare type ArrayPropertyOptions<T> = {
    example?: T[];
    default?: T[];
    isArray: true | {
        minLength?: number;
        maxLength?: number;
        length?: number;
    };
};
export declare const noop: () => void;
export declare const compose: <T, CustomOptions>(apiPropertyOptions: ApiPropertyOptions, { isArray, nullable, example, optional, description, deprecated, default: def, name, }: PropertyOptions<T, CustomOptions>, ...decorators: PropertyDecorator[]) => PropertyDecorator;
