"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsNested = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const rxjs_1 = require("rxjs");
const core_1 = require("../core");
const nestedFieldMessage = (isArray) => ({ property }) => isArray
    ? `nested property ${property} must only contain objects`
    : `nested property ${property} must be an object`;
const IsNested = ({ type, ...base }) => (0, core_1.compose)({ type }, base, (0, class_transformer_1.Type)(() => type), !base.isArray
    ? (0, class_validator_1.IsObject)({
        message: nestedFieldMessage(!!base.isArray),
    })
    : rxjs_1.noop, (0, class_validator_1.ValidateNested)({
    each: !!base.isArray,
    message: nestedFieldMessage(!!base.isArray),
}));
exports.IsNested = IsNested;
//# sourceMappingURL=is-nested.js.map